<?php

/**
 * WooCommerce AdRoll
 *
 * This class file is where all the magic happens to integrate AdRoll into your WooCommerce powered site.
 *
 * @since     1.0.0
 * @author    Mindsize <info@mindsize.me>
 * @copyright Copyright (c) 2017 Mindsize <info@mindsize.me>
 * @license   http://www.gnu.org/licenses/gpl-2.0.html GNU General Public License v2.0
 */
class WC_AdRoll extends WC_Integration {

	/**
	 * The ID of the WooCommerce integration
	 *
	 * @var string
	 */
	public $id = 'adroll';

	/**
	 * Container used to store the WC_Order object when integrating conversion vars into AdRoll JS.
	 *
	 * @var null|\WC_Order
	 */
	protected $order;

	/**
	 * Container used to store the WC_Product object when integrating product view vars into AdRoll JS.
	 *
	 * @var null|\WC_Product
	 */
	protected $product;

	/**
	 * Constructor.
	 */
	public function __construct() {
		$this->method_title       = __( 'AdRoll', 'wc-adroll' );
		$this->method_description = __( 'Integrate AdRoll into your WooCommerce powered website.', 'wc-adroll' );

		add_action( 'woocommerce_update_options_integration_' . $this->id, array(
			$this,
			'process_admin_options'
		) );

		$this->form_fields = array(
			'adv_id' => array(
				'title'       => __( 'adroll_adv_id', 'wc-adroll' ),
				'type'        => 'text',
				'default'     => '',
				'description' => __( 'Copy the adroll_adv_id from the manual integration code provided to you by AdRoll.', 'wc-adroll' ),
			),
			'pix_id' => array(
				'title'       => __( 'adroll_pix_id', 'wc-adroll' ),
				'type'        => 'text',
				'default'     => '',
				'description' => __( 'Copy the adroll_pix_id from the manual integration code provided to you by AdRoll.', 'wc-adroll' ),
			)
		);

		$this->init_settings();

		/**
		 * Integrate the JS into the bottom of every page before the </body> tag.
		 */
		add_action( 'wp_footer', array(
			$this,
			'js'
		) );

		/**
		 * On individual product pages, add the product ID as a product view to AdRoll JS vars.
		 */
		add_action( 'wp', array(
			$this,
			'maybe_add_viewed_product_var'
		) );

		/**
		 * On the order thank you page, grab the order object and trigger filtering of the AdRoll JS vars for conversion.
		 */
		add_action( 'woocommerce_thankyou', array(
			$this,
			'maybe_add_conversion_vars'
		) );
	}

	public function get_adv_id() {
		return $this->get_option( 'adv_id' );

	}

	public function get_pix_id() {
		return $this->get_option( 'pix_id' );
	}

	public function get_adroll_vars() {
		$vars = array(
			'adroll_adv_id' => $this->get_adv_id(),
			'adroll_pix_id' => $this->get_pix_id(),
		);

		if( is_user_logged_in() ) {
			$current_user = wp_get_current_user();

			$vars[ 'adroll_email' ] = $current_user->user_email;
		}

		return apply_filters( 'wc_adroll_vars', $vars );
	}

	public function output_adroll_vars() {
		print( "\n" );

		foreach( $this->get_adroll_vars() as $var => $value ) {
			if( is_array( $value ) ) {
				printf( "%s = %s;\n", $var, json_encode( $value ) );
			} else {
				printf( "%s = '%s';\n", $var, $value );
			}

		}
	}

	public function maybe_add_viewed_product_var() {
		$this->product = wc_get_product( get_the_ID() );

		add_filter( 'wc_adroll_vars', array(
			$this,
			'add_product_view_vars'
		) );
	}

	public function maybe_add_conversion_vars( $order_id ) {
		$this->order = wc_get_order( $order_id );

		add_filter( 'wc_adroll_vars', array(
			$this,
			'add_conversion_vars'
		) );
	}

	public function add_conversion_vars( $vars = array() ) {
		if( false !== $this->order ) {
			$vars[ 'adroll_conversion_value' ] = $this->order->get_total();
			$vars[ 'adroll_currency' ]         = $this->order->get_currency();
			$vars[ 'adroll_checkout_ids' ]     = array();
			$vars[ 'adroll_custom_data' ]      = array(
				'order_id'     => $this->order->get_id(),
				'order_number' => $this->order->get_order_number(),
				'customer_id'  => $this->order->get_customer_id(),
			);

			foreach( $this->order->get_items() as $item ) {
				if( method_exists( $item, 'get_product_id' ) && ! empty( $item->get_product_id() ) ) {
					$vars[ 'adroll_checkout_ids' ][] = $item->get_product_id();
				}
			}
		}

		return $vars;
	}

	public function add_product_view_vars( $vars ) {
		if( false !== $this->product ) {
			$vars[ 'adroll_product_id' ] = $this->product->get_id();
		}

		return $vars;
	}

	public function js() { ?>
        <!-- AdRoll JS generated by WC Adroll -->
        <script type="text/javascript">
			<?php $this->output_adroll_vars(); ?>

            (function () {
                var _onload = function () {
                    if (document.readyState && !/loaded|complete/.test(document.readyState)) {
                        setTimeout(_onload, 10);
                        return
                    }
                    if (!window.__adroll_loaded) {
                        __adroll_loaded = true;
                        setTimeout(_onload, 50);
                        return
                    }
                    var scr = document.createElement("script");
                    var host = (("https:" == document.location.protocol) ? "https://s.adroll.com" : "http://a.adroll.com");
                    scr.setAttribute('async', 'true');
                    scr.type = "text/javascript";
                    scr.src = host + "/j/roundtrip.js";
                    ((document.getElementsByTagName('head') || [null])[0] ||
                    document.getElementsByTagName('script')[0].parentNode).appendChild(scr);
                };
                if (window.addEventListener) {
                    window.addEventListener('load', _onload, false);
                }
                else {
                    window.attachEvent('onload', _onload)
                }
            }());
        </script>
        <!-- AdRoll JS generated by WC Adroll -->
	<?php }
}